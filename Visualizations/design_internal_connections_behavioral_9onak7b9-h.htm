<!DOCTYPE html public "-//W3C//DTD HTML 4.0 Final//EN">
<html>
<head>
<meta charset="utf-8">
<meta generator="Ease 9.5 Revision 5">
<link rel="stylesheet" type="text/css" href="easestyle.css">
<title>Architecture design.internal_connections.behavioral</title>
</head>
<body>
<div class="hdlw_banner"><a href="https://www.hdlworks.com">Generated by <b>Ease</b> for <i>chrisnielsen</i> on Fri Dec 13 09:05:10 2024</a></div>

<div class="hdlw_nav"><table><tr><td><a href="javascript:history.go(-1)"><img src="images/arrow_left.png">Back</a></td>
<td><a href="index.htm"><img src="images/ease.png">Index</a></td>
<td><a href="design_nus4l6t2.htm"><img src="images/library.png">design</a></td>
<td><a href="design_internal_connections_hlh5uh6r.htm"><img src="images/symbol.png">internal_connections</a></td>
</tr>
</table>
</div>
<h1>Documentation for architecture design.internal_connections.behavioral</h1><table class="tableContents"><tr>
<td><a href="design_internal_connections_behavioral_9onak7b9.htm">Contents</a></td>
<td><a href="design_internal_connections_behavioral_9onak7b9-d.htm">Side Data</a></td>
<td class="grActive"><a href="design_internal_connections_behavioral_9onak7b9-h.htm">Generated HDL</a></td>
</tr></table>
<br>
<pre class="DefaultText">
<span class="DefaultMargin">    1  </span><span class="DefaultComment">--------------------------------------------------------------------------------</span>
<span class="DefaultMargin">    2  </span><span class="DefaultComment">-- Object        : Architecture design.internal_connections.behavioral</span>
<span class="DefaultMargin">    3  </span><span class="DefaultComment">-- Last modified : Fri Dec 13 09:00:35 2024</span>
<span class="DefaultMargin">    4  </span><span class="DefaultComment">--------------------------------------------------------------------------------</span>
<span class="DefaultMargin">    5  </span>
<span class="DefaultMargin">    6  </span><span class="DefaultGroup1">architecture</span><span class="DefaultText"> behavioral </span><span class="DefaultGroup1">of</span><span class="DefaultText"> internal_connections </span><span class="DefaultGroup1">is</span>
<span class="DefaultMargin">    7  </span>
<span class="DefaultMargin">    8  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> rf_data_out                                 : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- Internal signals for data routing</span>
<span class="DefaultMargin">    9  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> dm_data_out                                 : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   10  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> branchand_jumpbranchselect_to_pc_mux        : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">; </span><span class="DefaultComment">-- XXX &amp; PC MUX</span>
<span class="DefaultMargin">   11  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> pc4adder_pcplus4_to_pc_mux                  : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- PC4ADDER &amp; PC MUX</span>
<span class="DefaultMargin">   12  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> pcplusimmadder_pcplusimm_to_pc_mux          : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- PC4ADDER &amp; PC MUX</span>
<span class="DefaultMargin">   13  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> controlunit_branch_to_idex                  : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   14  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> controlunit_earlybranch_to_pcmux            : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   15  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> pc_pcout_to_pc4adder                        : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- PC &amp; PC PC4ADDER</span>
<span class="DefaultMargin">   16  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> pc_mux_pcsource_to_pc                       : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- PC MUX &amp; PC</span>
<span class="DefaultMargin">   17  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> hazardunit_pcwrite_to_pc                    : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">; </span><span class="DefaultComment">-- XXX and PC</span>
<span class="DefaultMargin">   18  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> pc_pcout_to_instruction_memory              : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- PC &amp; instruction memory</span>
<span class="DefaultMargin">   19  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> instruction_memory_instruction_to_ifid      : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- instruction memory &amp; ifid</span>
<span class="DefaultMargin">   20  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> pc_pcout_to_ifid                            : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- PC &amp; ifid</span>
<span class="DefaultMargin">   21  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> hazardunit_ifidwrite_to_ifid                : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">; </span><span class="DefaultComment">-- XXX &amp; ifid</span>
<span class="DefaultMargin">   22  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> ifid_rs1_to_register                        : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   23  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> ifid_rs2_to_register                        : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   24  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> ifid_rd_to_idex                             : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   25  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> ifid_instruction_to_OUT                     : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- instruction memory &amp; ifid</span>
<span class="DefaultMargin">   26  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> ifid_pcout_to_OUT                           : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   27  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> ifid_instruction_to_immediategen            : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- --------------------------------------------------------------------------END      </span>
<span class="DefaultMargin">   28  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> immediategen_immediate_to_pcimmadder        : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- TO PCIMMADDER</span>
<span class="DefaultMargin">   29  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> ifid_pcout_to_pcimmadder                    : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   30  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> immediategen_immediate_to_idex              : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- TO IDEX</span>
<span class="DefaultMargin">   31  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> memwb_regwrite_to_registers                 : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">; </span><span class="DefaultComment">-- TO REGISTER FILE</span>
<span class="DefaultMargin">   32  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> writebackmux_writedata_to_registers         : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   33  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> registers_reg1out_to_idex                   : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   34  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> registers_reg2out_to_idex                   : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   35  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> hazardunit_controldisable_to_controlunit    : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">; </span><span class="DefaultComment">-- TO CONTROL UNIT</span>
<span class="DefaultMargin">   36  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> hazardunit_cntrlsigmux_to_controlunit       : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   37  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> registers_reg1out_to_controlunit            : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   38  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> registers_reg2out_to_controlunit            : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   39  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> controlunit_memtoreg_to_idex                : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   40  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> controlunit_regwrite_to_idex                : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   41  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> controlunit_memread_to_idex                 : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   42  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> controlunit_memwrite_to_idex                : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   43  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> controlunit_alusource_to_idex               : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   44  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> contolunit_aluop_to_idex                    : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(1 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   45  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> controlunit_ifflush_to_ifid                 : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   46  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> hazardunit_controlsigmux_to_controlunit     : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   47  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_memtoreg_to_exmem                      : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   48  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_regwrite_to_exmem                      : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   49  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_memread_to_exmem                       : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   50  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_memwrite_to_exmem                      : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   51  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_branch_to_exmem                        : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   52  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_alusrcb_to_alusrcmuxb                  : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   53  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_rs1_to_forwardingunit                  : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   54  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_rs2_to_forwardingunit                  : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   55  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_rd_to_exmem                            : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   56  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_instruction_to_alucontrol              : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- --------------------------------------------------------------------------END</span>
<span class="DefaultMargin">   57  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_aluop_to_alucontrol                    : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(1 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   58  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> alucontrol_aluop_to_alu                     : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   59  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_pcout_to_alu                           : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- --TO ALU</span>
<span class="DefaultMargin">   60  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_rs1_to_forwardingmuxa                  : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- TO FORWARDINGMUXA</span>
<span class="DefaultMargin">   61  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> forwardingunit_Amuxcntrl_to_forrwardingmuxA : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(1 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   62  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> forwardingmuxA_rs1_to_ALU                   : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   63  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_rs2_to_forwardingmuxb                  : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- TO FORWARDINGMUXB</span>
<span class="DefaultMargin">   64  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> forwardingunit_Bmuxcntrl_to_forrwardingmuxB : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(1 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   65  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> forwardingmuxb_rs2_to_alusrcmuxb            : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- --     signal forwardingmuxB_rs2_to_alusrcmuxB : std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   66  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> idex_immediate_to_alusrcmuxb                : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   67  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> alusrcmuxB_rs2_to_alu                       : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   68  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> alu_zeroresult_to_exmem                     : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   69  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> alu_JALorBRANCH_to_exmem                    : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   70  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> alu_result_to_exmem                         : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   71  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> alusrcmuxb_source2_to_exmem                 : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   72  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> exmem_zero_to_branchand                     : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   73  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> exmem_result_to_datamem                     : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   74  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> exmem_src2_to_datamem                       : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   75  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> exmem_memtoreg_to_memwb                     : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">; </span><span class="DefaultComment">-- --</span>
<span class="DefaultMargin">   76  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> exmem_regwrite_to_memwb                     : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   77  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> exmem_memread_to_datamem                    : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">; </span><span class="DefaultComment">-- --  </span>
<span class="DefaultMargin">   78  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> exmem_memwrite_to_datamem                   : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   79  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> exmem_branch_to_branchand                   : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   80  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> exmem_rd_to_memwb                           : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0); </span><span class="DefaultComment">-- --  </span>
<span class="DefaultMargin">   81  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> datamem_readdata_to_memwb                   : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   82  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> memwb_readdata_to_writebackmux              : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   83  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> memwb_aluresult_to_writebackmux             : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   84  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> branchand_regwritecancel_to_exmem           : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   85  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> memwb_memtoreg_to_wbmux                     : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   86  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> memwb_rd_to_out                             : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   87  </span>
<span class="DefaultMargin">   88  </span><span class="DefaultGroup1">begin</span>
<span class="DefaultMargin">   89  </span>
<span class="DefaultMargin">   90  </span><span class="DefaultText">  </span><span class="DefaultComment">-- --TO WRITEBACK MUX</span>
<span class="DefaultMargin">   91  </span>
<span class="DefaultMargin">   92  </span><span class="DefaultText">  pc_mux_inst: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.pc_mux(behavioral)</span>
<span class="DefaultMargin">   93  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">   94  </span><span class="DefaultText">      branch                 =&gt; branchand_jumpbranchselect_to_pc_mux,</span>
<span class="DefaultMargin">   95  </span><span class="DefaultText">      earlybranchcontrolunit =&gt; controlunit_earlybranch_to_pcmux,</span>
<span class="DefaultMargin">   96  </span><span class="DefaultText">      pcplus4                =&gt; pc4adder_pcplus4_to_pc_mux,</span>
<span class="DefaultMargin">   97  </span><span class="DefaultText">      pcplusimm              =&gt; pcplusimmadder_pcplusimm_to_pc_mux,</span>
<span class="DefaultMargin">   98  </span><span class="DefaultText">      pcsource               =&gt; pc_mux_pcsource_to_pc);</span>
<span class="DefaultMargin">   99  </span>
<span class="DefaultMargin">  100  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO PC 4 ADDER</span>
<span class="DefaultMargin">  101  </span>
<span class="DefaultMargin">  102  </span><span class="DefaultText">  pc_4_adder_instance: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.pc4adder(rtl)</span>
<span class="DefaultMargin">  103  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  104  </span><span class="DefaultText">      pcout   =&gt; pc_pcout_to_pc4adder,</span>
<span class="DefaultMargin">  105  </span><span class="DefaultText">      pcplus4 =&gt; pc4adder_pcplus4_to_pc_mux);</span>
<span class="DefaultMargin">  106  </span>
<span class="DefaultMargin">  107  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO PC</span>
<span class="DefaultMargin">  108  </span>
<span class="DefaultMargin">  109  </span><span class="DefaultText">  pc_instance: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.program_counter(rtl)</span>
<span class="DefaultMargin">  110  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  111  </span><span class="DefaultText">      clk      =&gt; clock,</span>
<span class="DefaultMargin">  112  </span><span class="DefaultText">      reset    =&gt; resetbar,</span>
<span class="DefaultMargin">  113  </span><span class="DefaultText">      pcwrite  =&gt; hazardunit_pcwrite_to_pc,</span>
<span class="DefaultMargin">  114  </span><span class="DefaultText">      pcsource =&gt; pc_mux_pcsource_to_pc,</span>
<span class="DefaultMargin">  115  </span><span class="DefaultText">      pcout    =&gt; pc_pcout_to_instruction_memory);</span>
<span class="DefaultMargin">  116  </span>
<span class="DefaultMargin">  117  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO INSTRUCTION MEMORY</span>
<span class="DefaultMargin">  118  </span>
<span class="DefaultMargin">  119  </span><span class="DefaultText">  instruction_memory_inst: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.instruction_memory(Behavioral)</span>
<span class="DefaultMargin">  120  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  121  </span><span class="DefaultText">      pc_address  =&gt; pc_pcout_to_instruction_memory,</span>
<span class="DefaultMargin">  122  </span><span class="DefaultText">      reset       =&gt; resetbar,</span>
<span class="DefaultMargin">  123  </span><span class="DefaultText">      instruction =&gt; instruction_memory_instruction_to_ifid,</span>
<span class="DefaultMargin">  124  </span><span class="DefaultText">      debug_clk   =&gt; debug_clk,</span>
<span class="DefaultMargin">  125  </span><span class="DefaultText">      debug_addr  =&gt; debug_addr,</span>
<span class="DefaultMargin">  126  </span><span class="DefaultText">      debug_data  =&gt; debug_data,</span>
<span class="DefaultMargin">  127  </span><span class="DefaultText">      debug_we    =&gt; im_enable);</span>
<span class="DefaultMargin">  128  </span>
<span class="DefaultMargin">  129  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO IFID</span>
<span class="DefaultMargin">  130  </span>
<span class="DefaultMargin">  131  </span><span class="DefaultText">  ifid_instance: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.ifid(Behavioral)</span>
<span class="DefaultMargin">  132  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  133  </span><span class="DefaultText">      clk                =&gt; clock,</span>
<span class="DefaultMargin">  134  </span><span class="DefaultText">      rstbar             =&gt; resetbar,</span>
<span class="DefaultMargin">  135  </span><span class="DefaultText">      ifidwrite          =&gt; hazardunit_ifidwrite_to_ifid,</span>
<span class="DefaultMargin">  136  </span><span class="DefaultText">      ifidflush          =&gt; controlunit_ifflush_to_ifid,</span>
<span class="DefaultMargin">  137  </span><span class="DefaultText">      branch_taken       =&gt; branchand_jumpbranchselect_to_pc_mux,</span>
<span class="DefaultMargin">  138  </span><span class="DefaultText">      pcout              =&gt; pc_pcout_to_ifid,</span>
<span class="DefaultMargin">  139  </span><span class="DefaultText">      instruction        =&gt; instruction_memory_instruction_to_ifid,</span>
<span class="DefaultMargin">  140  </span><span class="DefaultText">      ifidinstructionout =&gt; ifid_instruction_to_OUT,</span>
<span class="DefaultMargin">  141  </span><span class="DefaultText">      ifidpcout          =&gt; ifid_pcout_to_OUT,</span>
<span class="DefaultMargin">  142  </span><span class="DefaultText">      rs1_out            =&gt; ifid_rs1_to_register,</span>
<span class="DefaultMargin">  143  </span><span class="DefaultText">      rs2_out            =&gt; ifid_rs2_to_register,</span>
<span class="DefaultMargin">  144  </span><span class="DefaultText">      rd_out             =&gt; ifid_rd_to_idex);</span>
<span class="DefaultMargin">  145  </span>
<span class="DefaultMargin">  146  </span><span class="DefaultText">  imm_gen_inst: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.ImmGen(Behavioral)</span>
<span class="DefaultMargin">  147  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  148  </span><span class="DefaultText">      instruction =&gt; ifid_instruction_to_immediategen,</span>
<span class="DefaultMargin">  149  </span><span class="DefaultText">      pcadderimm  =&gt; immediategen_immediate_to_pcimmadder,</span>
<span class="DefaultMargin">  150  </span><span class="DefaultText">      immediate   =&gt; immediategen_immediate_to_idex);</span>
<span class="DefaultMargin">  151  </span>
<span class="DefaultMargin">  152  </span><span class="DefaultText">  pcimmadder_inst: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.pcimmadder(behavior)</span>
<span class="DefaultMargin">  153  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  154  </span><span class="DefaultText">      pc        =&gt; ifid_pcout_to_pcimmadder,</span>
<span class="DefaultMargin">  155  </span><span class="DefaultText">      immediate =&gt; immediategen_immediate_to_pcimmadder,</span>
<span class="DefaultMargin">  156  </span><span class="DefaultText">      pcplusimm =&gt; pcplusimmadder_pcplusimm_to_pc_mux);</span>
<span class="DefaultMargin">  157  </span>
<span class="DefaultMargin">  158  </span><span class="DefaultText">  </span><span class="DefaultComment">-- REGISTER FILE</span>
<span class="DefaultMargin">  159  </span>
<span class="DefaultMargin">  160  </span><span class="DefaultText">  REGFILE_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.regfile(Behavioral)</span>
<span class="DefaultMargin">  161  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  162  </span><span class="DefaultText">      resetbar             =&gt; resetbar,</span>
<span class="DefaultMargin">  163  </span><span class="DefaultText">      regwrite             =&gt; memwb_regwrite_to_registers,</span>
<span class="DefaultMargin">  164  </span><span class="DefaultText">      readregister1        =&gt; ifid_rs1_to_register,</span>
<span class="DefaultMargin">  165  </span><span class="DefaultText">      readregister2        =&gt; ifid_rs2_to_register,</span>
<span class="DefaultMargin">  166  </span><span class="DefaultText">      writeregisteraddress =&gt; memwb_rd_to_out,</span>
<span class="DefaultMargin">  167  </span><span class="DefaultText">      writedata            =&gt; writebackmux_writedata_to_registers,</span>
<span class="DefaultMargin">  168  </span><span class="DefaultText">      readdata1            =&gt; registers_reg1out_to_idex,</span>
<span class="DefaultMargin">  169  </span><span class="DefaultText">      readdata2            =&gt; registers_reg2out_to_idex,</span>
<span class="DefaultMargin">  170  </span><span class="DefaultText">      debug_clk            =&gt; debug_clk,</span>
<span class="DefaultMargin">  171  </span><span class="DefaultText">      debug_address        =&gt; debug_addr(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0),</span>
<span class="DefaultMargin">  172  </span><span class="DefaultText">      debug_read_enable    =&gt; rf_enable,</span>
<span class="DefaultMargin">  173  </span><span class="DefaultText">      debug_data           =&gt; rf_data_out);</span>
<span class="DefaultMargin">  174  </span>
<span class="DefaultMargin">  175  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO CONTROL UNIT</span>
<span class="DefaultMargin">  176  </span>
<span class="DefaultMargin">  177  </span><span class="DefaultText">  CONTROLUNIT_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.ControlUnit(Behavioral)</span>
<span class="DefaultMargin">  178  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  179  </span><span class="DefaultText">      instruction   =&gt; ifid_instruction_to_OUT,</span>
<span class="DefaultMargin">  180  </span><span class="DefaultText">      cntrlsigmux   =&gt; hazardunit_cntrlsigmux_to_controlunit,</span>
<span class="DefaultMargin">  181  </span><span class="DefaultText">      rs1_data      =&gt; registers_reg1out_to_controlunit,</span>
<span class="DefaultMargin">  182  </span><span class="DefaultText">      rs2_data      =&gt; registers_reg2out_to_controlunit,</span>
<span class="DefaultMargin">  183  </span><span class="DefaultText">      exmem_rd      =&gt; exmem_rd_to_memwb,</span>
<span class="DefaultMargin">  184  </span><span class="DefaultText">      exmem_regdata =&gt; exmem_result_to_datamem,</span>
<span class="DefaultMargin">  185  </span><span class="DefaultText">      memwb_rd      =&gt; memwb_rd_to_out,</span>
<span class="DefaultMargin">  186  </span><span class="DefaultText">      memwb_regdata =&gt; writebackmux_writedata_to_registers,</span>
<span class="DefaultMargin">  187  </span><span class="DefaultText">      MemtoReg      =&gt; controlunit_memtoreg_to_idex,</span>
<span class="DefaultMargin">  188  </span><span class="DefaultText">      RegWrite      =&gt; controlunit_regwrite_to_idex,</span>
<span class="DefaultMargin">  189  </span><span class="DefaultText">      MemRead       =&gt; controlunit_memread_to_idex,</span>
<span class="DefaultMargin">  190  </span><span class="DefaultText">      MemWrite      =&gt; controlunit_memwrite_to_idex,</span>
<span class="DefaultMargin">  191  </span><span class="DefaultText">      Branch        =&gt; controlunit_branch_to_idex,</span>
<span class="DefaultMargin">  192  </span><span class="DefaultText">      ALUSrc        =&gt; controlunit_alusource_to_idex,</span>
<span class="DefaultMargin">  193  </span><span class="DefaultText">      ALUOp         =&gt; contolunit_aluop_to_idex,</span>
<span class="DefaultMargin">  194  </span><span class="DefaultText">      if_flush      =&gt; controlunit_ifflush_to_ifid,</span>
<span class="DefaultMargin">  195  </span><span class="DefaultText">      early_branch  =&gt; controlunit_earlybranch_to_pcmux,</span>
<span class="DefaultMargin">  196  </span><span class="DefaultText">      ctrl_disable  =&gt; hazardunit_controldisable_to_controlunit);</span>
<span class="DefaultMargin">  197  </span>
<span class="DefaultMargin">  198  </span><span class="DefaultText">  </span><span class="DefaultComment">-- -- NEED TO ADD THE EXMEM AND MEMWB forwarding signals !!! logic is implenented </span>
<span class="DefaultMargin">  199  </span>
<span class="DefaultMargin">  200  </span><span class="DefaultText">  HAZARD_UNIT_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.hazard_unit(Behavioral)</span>
<span class="DefaultMargin">  201  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  202  </span><span class="DefaultText">      idexmemread   =&gt; idex_memread_to_exmem,</span>
<span class="DefaultMargin">  203  </span><span class="DefaultText">      idexrd        =&gt; idex_rd_to_exmem,</span>
<span class="DefaultMargin">  204  </span><span class="DefaultText">      instruction   =&gt; ifid_instruction_to_OUT,</span>
<span class="DefaultMargin">  205  </span><span class="DefaultText">      cntrlsigmux   =&gt; hazardunit_controlsigmux_to_controlunit,</span>
<span class="DefaultMargin">  206  </span><span class="DefaultText">      pcwriteenable =&gt; hazardunit_pcwrite_to_pc,</span>
<span class="DefaultMargin">  207  </span><span class="DefaultText">      ifidflush     =&gt; </span><span class="DefaultGroup1">open</span><span class="DefaultText">,</span>
<span class="DefaultMargin">  208  </span><span class="DefaultText">      ctrl_disable  =&gt; hazardunit_controldisable_to_controlunit);</span>
<span class="DefaultMargin">  209  </span>
<span class="DefaultMargin">  210  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO IDEX</span>
<span class="DefaultMargin">  211  </span>
<span class="DefaultMargin">  212  </span><span class="DefaultText">  IDEX_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.idex(Behavioral)</span>
<span class="DefaultMargin">  213  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  214  </span><span class="DefaultText">      clk            =&gt; clock,</span>
<span class="DefaultMargin">  215  </span><span class="DefaultText">      rstbar         =&gt; resetbar,</span>
<span class="DefaultMargin">  216  </span><span class="DefaultText">      pcin           =&gt; ifid_pcout_to_pcimmadder,</span>
<span class="DefaultMargin">  217  </span><span class="DefaultText">      instructionin  =&gt; ifid_instruction_to_OUT,</span>
<span class="DefaultMargin">  218  </span><span class="DefaultText">      instructionout =&gt; idex_instruction_to_alucontrol,</span>
<span class="DefaultMargin">  219  </span><span class="DefaultText">      readdata1in    =&gt; registers_reg1out_to_idex,</span>
<span class="DefaultMargin">  220  </span><span class="DefaultText">      readdata2in    =&gt; registers_reg2out_to_idex,</span>
<span class="DefaultMargin">  221  </span><span class="DefaultText">      immediatein    =&gt; immediategen_immediate_to_idex,</span>
<span class="DefaultMargin">  222  </span><span class="DefaultText">      immediateout   =&gt; idex_immediate_to_alusrcmuxb,</span>
<span class="DefaultMargin">  223  </span><span class="DefaultText">      pcout          =&gt; idex_pcout_to_alu,</span>
<span class="DefaultMargin">  224  </span><span class="DefaultText">      readdata1out   =&gt; idex_rs1_to_forwardingmuxa,</span>
<span class="DefaultMargin">  225  </span><span class="DefaultText">      readdata2out   =&gt; idex_rs2_to_forwardingmuxb,</span>
<span class="DefaultMargin">  226  </span><span class="DefaultText">      MemtoRegin     =&gt; controlunit_memtoreg_to_idex,</span>
<span class="DefaultMargin">  227  </span><span class="DefaultText">      RegWritein     =&gt; controlunit_regwrite_to_idex,</span>
<span class="DefaultMargin">  228  </span><span class="DefaultText">      MemReadin      =&gt; controlunit_memread_to_idex,</span>
<span class="DefaultMargin">  229  </span><span class="DefaultText">      MemWritein     =&gt; controlunit_memwrite_to_idex,</span>
<span class="DefaultMargin">  230  </span><span class="DefaultText">      Branchin       =&gt; controlunit_branch_to_idex,</span>
<span class="DefaultMargin">  231  </span><span class="DefaultText">      ALUSrcin       =&gt; controlunit_alusource_to_idex,</span>
<span class="DefaultMargin">  232  </span><span class="DefaultText">      ALUOpin        =&gt; contolunit_aluop_to_idex,</span>
<span class="DefaultMargin">  233  </span><span class="DefaultText">      MemtoRegout    =&gt; idex_memtoreg_to_exmem,</span>
<span class="DefaultMargin">  234  </span><span class="DefaultText">      RegWriteout    =&gt; idex_regwrite_to_exmem,</span>
<span class="DefaultMargin">  235  </span><span class="DefaultText">      MemReadout     =&gt; idex_memread_to_exmem,</span>
<span class="DefaultMargin">  236  </span><span class="DefaultText">      MemWriteout    =&gt; idex_memwrite_to_exmem,</span>
<span class="DefaultMargin">  237  </span><span class="DefaultText">      Branchout      =&gt; idex_branch_to_exmem,</span>
<span class="DefaultMargin">  238  </span><span class="DefaultText">      ALUSrc         =&gt; idex_alusrcb_to_alusrcmuxb,</span>
<span class="DefaultMargin">  239  </span><span class="DefaultText">      ALUOp          =&gt; idex_aluop_to_alucontrol,</span>
<span class="DefaultMargin">  240  </span><span class="DefaultText">      rs1in          =&gt; ifid_rs1_to_register,</span>
<span class="DefaultMargin">  241  </span><span class="DefaultText">      rs2in          =&gt; ifid_rs2_to_register,</span>
<span class="DefaultMargin">  242  </span><span class="DefaultText">      rdin           =&gt; ifid_rd_to_idex,</span>
<span class="DefaultMargin">  243  </span><span class="DefaultText">      rs1out         =&gt; idex_rs1_to_forwardingunit,</span>
<span class="DefaultMargin">  244  </span><span class="DefaultText">      rs2out         =&gt; idex_rs2_to_forwardingunit,</span>
<span class="DefaultMargin">  245  </span><span class="DefaultText">      rdout          =&gt; idex_rd_to_exmem);</span>
<span class="DefaultMargin">  246  </span>
<span class="DefaultMargin">  247  </span><span class="DefaultText">  </span><span class="DefaultComment">-- --------------------------------------------------------------------------END</span>
<span class="DefaultMargin">  248  </span>
<span class="DefaultMargin">  249  </span><span class="DefaultText">  ALU_CONTROL_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.alucontrol(Behavioral)</span>
<span class="DefaultMargin">  250  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  251  </span><span class="DefaultText">      instruction  =&gt; idex_instruction_to_alucontrol,</span>
<span class="DefaultMargin">  252  </span><span class="DefaultText">      aluop        =&gt; idex_aluop_to_alucontrol,</span>
<span class="DefaultMargin">  253  </span><span class="DefaultText">      aluoperation =&gt; alucontrol_aluop_to_alu);</span>
<span class="DefaultMargin">  254  </span>
<span class="DefaultMargin">  255  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO ALU</span>
<span class="DefaultMargin">  256  </span>
<span class="DefaultMargin">  257  </span><span class="DefaultText">  ALU_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.ALU(Behavioral)</span>
<span class="DefaultMargin">  258  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  259  </span><span class="DefaultText">      input_0     =&gt; forwardingmuxA_rs1_to_ALU,</span>
<span class="DefaultMargin">  260  </span><span class="DefaultText">      input_1     =&gt; alusrcmuxB_rs2_to_alu,</span>
<span class="DefaultMargin">  261  </span><span class="DefaultText">      pc          =&gt; idex_pcout_to_alu,</span>
<span class="DefaultMargin">  262  </span><span class="DefaultText">      operation   =&gt; alucontrol_aluop_to_alu,</span>
<span class="DefaultMargin">  263  </span><span class="DefaultText">      ALU_output  =&gt; alu_result_to_exmem,</span>
<span class="DefaultMargin">  264  </span><span class="DefaultText">      zero_flag   =&gt; alu_zeroresult_to_exmem,</span>
<span class="DefaultMargin">  265  </span><span class="DefaultText">      JALorBRANCH =&gt; alu_JALorBRANCH_to_exmem);</span>
<span class="DefaultMargin">  266  </span>
<span class="DefaultMargin">  267  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO FORWARDINGMUXA</span>
<span class="DefaultMargin">  268  </span>
<span class="DefaultMargin">  269  </span><span class="DefaultText">  FORWARDING_MUX_A_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.forwardingMuxA(Behavioral)</span>
<span class="DefaultMargin">  270  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  271  </span><span class="DefaultText">      rs1               =&gt; idex_rs1_to_forwardingmuxa,</span>
<span class="DefaultMargin">  272  </span><span class="DefaultText">      forwardedrs1exmem =&gt; exmem_result_to_datamem,</span>
<span class="DefaultMargin">  273  </span><span class="DefaultText">      forwardedrs1memwb =&gt; writebackmux_writedata_to_registers,</span>
<span class="DefaultMargin">  274  </span><span class="DefaultText">      forwardAmuxcntrl  =&gt; forwardingunit_Amuxcntrl_to_forrwardingmuxA,</span>
<span class="DefaultMargin">  275  </span><span class="DefaultText">      MuxOutput         =&gt; forwardingmuxA_rs1_to_ALU);</span>
<span class="DefaultMargin">  276  </span>
<span class="DefaultMargin">  277  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO FORWARDINGMUXB</span>
<span class="DefaultMargin">  278  </span>
<span class="DefaultMargin">  279  </span><span class="DefaultText">  FORWARDING_MUX_B_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.forwardingMuxB(Behavioral)</span>
<span class="DefaultMargin">  280  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  281  </span><span class="DefaultText">      rs2               =&gt; idex_rs2_to_forwardingmuxb,</span>
<span class="DefaultMargin">  282  </span><span class="DefaultText">      forwardedrs2exmem =&gt; exmem_result_to_datamem,</span>
<span class="DefaultMargin">  283  </span><span class="DefaultText">      forwardedrs2memwb =&gt; writebackmux_writedata_to_registers,</span>
<span class="DefaultMargin">  284  </span><span class="DefaultText">      forwardBmuxcntrl  =&gt; forwardingunit_Bmuxcntrl_to_forrwardingmuxB,</span>
<span class="DefaultMargin">  285  </span><span class="DefaultText">      MuxOutput         =&gt; forwardingmuxb_rs2_to_alusrcmuxb);</span>
<span class="DefaultMargin">  286  </span>
<span class="DefaultMargin">  287  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO ALUSRCMUXB</span>
<span class="DefaultMargin">  288  </span>
<span class="DefaultMargin">  289  </span><span class="DefaultText">  ALU_SRC_MUX_B_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.ALUSrcMuxB(Behavioral)</span>
<span class="DefaultMargin">  290  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  291  </span><span class="DefaultText">      ReadRegister2  =&gt; forwardingmuxb_rs2_to_alusrcmuxb,</span>
<span class="DefaultMargin">  292  </span><span class="DefaultText">      ReadImmediate  =&gt; idex_immediate_to_alusrcmuxb,</span>
<span class="DefaultMargin">  293  </span><span class="DefaultText">      ALUSrcBControl =&gt; idex_alusrcb_to_alusrcmuxb,</span>
<span class="DefaultMargin">  294  </span><span class="DefaultText">      MuxOutput      =&gt; alusrcmuxB_rs2_to_alu);</span>
<span class="DefaultMargin">  295  </span>
<span class="DefaultMargin">  296  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO EXMEM</span>
<span class="DefaultMargin">  297  </span>
<span class="DefaultMargin">  298  </span><span class="DefaultText">  EXMEM_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.exmem(Behavioral)</span>
<span class="DefaultMargin">  299  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  300  </span><span class="DefaultText">      clk          =&gt; clock,</span>
<span class="DefaultMargin">  301  </span><span class="DefaultText">      resetbar     =&gt; resetbar,</span>
<span class="DefaultMargin">  302  </span><span class="DefaultText">      aluzeroin    =&gt; alu_zeroresult_to_exmem,</span>
<span class="DefaultMargin">  303  </span><span class="DefaultText">      aluresultin  =&gt; alu_result_to_exmem,</span>
<span class="DefaultMargin">  304  </span><span class="DefaultText">      readdata2in  =&gt; forwardingmuxb_rs2_to_alusrcmuxb,</span>
<span class="DefaultMargin">  305  </span><span class="DefaultText">      aluzeroout   =&gt; exmem_zero_to_branchand,</span>
<span class="DefaultMargin">  306  </span><span class="DefaultText">      aluresultout =&gt; exmem_result_to_datamem,</span>
<span class="DefaultMargin">  307  </span><span class="DefaultText">      readdata2out =&gt; exmem_src2_to_datamem,</span>
<span class="DefaultMargin">  308  </span><span class="DefaultText">      MemtoRegin   =&gt; idex_memtoreg_to_exmem,</span>
<span class="DefaultMargin">  309  </span><span class="DefaultText">      RegWritein   =&gt; idex_regwrite_to_exmem,</span>
<span class="DefaultMargin">  310  </span><span class="DefaultText">      MemReadin    =&gt; idex_memread_to_exmem,</span>
<span class="DefaultMargin">  311  </span><span class="DefaultText">      MemWritein   =&gt; idex_memwrite_to_exmem,</span>
<span class="DefaultMargin">  312  </span><span class="DefaultText">      Branchin     =&gt; idex_branch_to_exmem,</span>
<span class="DefaultMargin">  313  </span><span class="DefaultText">      JALorBRANCH  =&gt; alu_JALorBRANCH_to_exmem,</span>
<span class="DefaultMargin">  314  </span><span class="DefaultText">      MemtoRegout  =&gt; exmem_memtoreg_to_memwb,</span>
<span class="DefaultMargin">  315  </span><span class="DefaultText">      RegWriteout  =&gt; exmem_regwrite_to_memwb,</span>
<span class="DefaultMargin">  316  </span><span class="DefaultText">      MemRead      =&gt; exmem_memread_to_datamem,</span>
<span class="DefaultMargin">  317  </span><span class="DefaultText">      MemWrite     =&gt; exmem_memwrite_to_datamem,</span>
<span class="DefaultMargin">  318  </span><span class="DefaultText">      Branch       =&gt; exmem_branch_to_branchand,</span>
<span class="DefaultMargin">  319  </span><span class="DefaultText">      rdin         =&gt; idex_rd_to_exmem,</span>
<span class="DefaultMargin">  320  </span><span class="DefaultText">      rdout        =&gt; exmem_rd_to_memwb);</span>
<span class="DefaultMargin">  321  </span>
<span class="DefaultMargin">  322  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO FORWARDING UNIT</span>
<span class="DefaultMargin">  323  </span>
<span class="DefaultMargin">  324  </span><span class="DefaultText">  FORWARDING_UNIT_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.ForwardingUnit(Behavioral)</span>
<span class="DefaultMargin">  325  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  326  </span><span class="DefaultText">      exmemregwritecntrl =&gt; exmem_regwrite_to_memwb,</span>
<span class="DefaultMargin">  327  </span><span class="DefaultText">      memwbregwritecntrl =&gt; memwb_regwrite_to_registers,</span>
<span class="DefaultMargin">  328  </span><span class="DefaultText">      exmemrd            =&gt; exmem_rd_to_memwb,</span>
<span class="DefaultMargin">  329  </span><span class="DefaultText">      memwbrd            =&gt; memwb_rd_to_out,</span>
<span class="DefaultMargin">  330  </span><span class="DefaultText">      idexrs1            =&gt; idex_rs1_to_forwardingunit,</span>
<span class="DefaultMargin">  331  </span><span class="DefaultText">      idexrs2            =&gt; idex_rs2_to_forwardingunit,</span>
<span class="DefaultMargin">  332  </span><span class="DefaultText">      forwardAmuxcntrl   =&gt; forwardingunit_Amuxcntrl_to_forrwardingmuxA,</span>
<span class="DefaultMargin">  333  </span><span class="DefaultText">      forwardBmuxcntrl   =&gt; forwardingunit_Bmuxcntrl_to_forrwardingmuxB);</span>
<span class="DefaultMargin">  334  </span>
<span class="DefaultMargin">  335  </span><span class="DefaultText">  </span><span class="DefaultComment">-- --------------------------------------------------------------------------END  </span>
<span class="DefaultMargin">  336  </span>
<span class="DefaultMargin">  337  </span><span class="DefaultText">  DATA_MEMORY_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.data_memory(Behavioral)</span>
<span class="DefaultMargin">  338  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  339  </span><span class="DefaultText">      clk               =&gt; clock,</span>
<span class="DefaultMargin">  340  </span><span class="DefaultText">      reset             =&gt; resetbar,</span>
<span class="DefaultMargin">  341  </span><span class="DefaultText">      memwrite          =&gt; exmem_memwrite_to_datamem,</span>
<span class="DefaultMargin">  342  </span><span class="DefaultText">      memread           =&gt; exmem_memread_to_datamem,</span>
<span class="DefaultMargin">  343  </span><span class="DefaultText">      address           =&gt; exmem_result_to_datamem,</span>
<span class="DefaultMargin">  344  </span><span class="DefaultText">      writedata         =&gt; exmem_src2_to_datamem,</span>
<span class="DefaultMargin">  345  </span><span class="DefaultText">      readdata          =&gt; datamem_readdata_to_memwb,</span>
<span class="DefaultMargin">  346  </span><span class="DefaultText">      debug_clk         =&gt; debug_clk,</span>
<span class="DefaultMargin">  347  </span><span class="DefaultText">      debug_address     =&gt; debug_addr,</span>
<span class="DefaultMargin">  348  </span><span class="DefaultText">      debug_read_enable =&gt; dm_enable,</span>
<span class="DefaultMargin">  349  </span><span class="DefaultText">      debug_data        =&gt; dm_data_out);</span>
<span class="DefaultMargin">  350  </span>
<span class="DefaultMargin">  351  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO BRANCH AND</span>
<span class="DefaultMargin">  352  </span>
<span class="DefaultMargin">  353  </span><span class="DefaultText">  BRANCH_AND_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.BranchAND(Behavioral)</span>
<span class="DefaultMargin">  354  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  355  </span><span class="DefaultText">      ALUZero        =&gt; exmem_zero_to_branchand,</span>
<span class="DefaultMargin">  356  </span><span class="DefaultText">      ControlBranch  =&gt; exmem_branch_to_branchand,</span>
<span class="DefaultMargin">  357  </span><span class="DefaultText">      BranchResponse =&gt; branchand_jumpbranchselect_to_pc_mux);</span>
<span class="DefaultMargin">  358  </span>
<span class="DefaultMargin">  359  </span><span class="DefaultText">  </span><span class="DefaultComment">-- --------------------------------------------------------------------------END     </span>
<span class="DefaultMargin">  360  </span>
<span class="DefaultMargin">  361  </span><span class="DefaultText">  MEMWB_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.memwb(Behavioral)</span>
<span class="DefaultMargin">  362  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  363  </span><span class="DefaultText">      clk                  =&gt; clock,</span>
<span class="DefaultMargin">  364  </span><span class="DefaultText">      resetbar             =&gt; resetbar,</span>
<span class="DefaultMargin">  365  </span><span class="DefaultText">      readdata2in          =&gt; datamem_readdata_to_memwb,</span>
<span class="DefaultMargin">  366  </span><span class="DefaultText">      aluresultin          =&gt; exmem_result_to_datamem,</span>
<span class="DefaultMargin">  367  </span><span class="DefaultText">      readdata2out         =&gt; memwb_readdata_to_writebackmux,</span>
<span class="DefaultMargin">  368  </span><span class="DefaultText">      aluresultout         =&gt; memwb_aluresult_to_writebackmux,</span>
<span class="DefaultMargin">  369  </span><span class="DefaultText">      MemtoRegin           =&gt; exmem_memtoreg_to_memwb,</span>
<span class="DefaultMargin">  370  </span><span class="DefaultText">      RegWritein           =&gt; exmem_regwrite_to_memwb,</span>
<span class="DefaultMargin">  371  </span><span class="DefaultText">      MemtoReg             =&gt; memwb_memtoreg_to_wbmux,</span>
<span class="DefaultMargin">  372  </span><span class="DefaultText">      RegWrite             =&gt; memwb_regwrite_to_registers,</span>
<span class="DefaultMargin">  373  </span><span class="DefaultText">      rdin                 =&gt; exmem_rd_to_memwb,</span>
<span class="DefaultMargin">  374  </span><span class="DefaultText">      rdout                =&gt; memwb_rd_to_out,</span>
<span class="DefaultMargin">  375  </span><span class="DefaultText">      branchregwritecancel =&gt; branchand_regwritecancel_to_exmem);</span>
<span class="DefaultMargin">  376  </span>
<span class="DefaultMargin">  377  </span><span class="DefaultText">  </span><span class="DefaultComment">-- TO WRITE BACK MUX</span>
<span class="DefaultMargin">  378  </span>
<span class="DefaultMargin">  379  </span><span class="DefaultText">  WRITEBACK_MUX_INST: </span><span class="DefaultGroup1">entity</span><span class="DefaultText"> design.writebackmux(Behavioral)</span>
<span class="DefaultMargin">  380  </span><span class="DefaultText">    </span><span class="DefaultGroup1">port</span><span class="DefaultText"> </span><span class="DefaultGroup1">map</span><span class="DefaultText">(</span>
<span class="DefaultMargin">  381  </span><span class="DefaultText">      memtoregcontrol =&gt; memwb_memtoreg_to_wbmux,</span>
<span class="DefaultMargin">  382  </span><span class="DefaultText">      read_data       =&gt; memwb_readdata_to_writebackmux,</span>
<span class="DefaultMargin">  383  </span><span class="DefaultText">      aluresult       =&gt; memwb_aluresult_to_writebackmux,</span>
<span class="DefaultMargin">  384  </span><span class="DefaultText">      writebackdata   =&gt; writebackmux_writedata_to_registers);</span>
<span class="DefaultMargin">  385  </span>
<span class="DefaultMargin">  386  </span>
<span class="DefaultMargin">  387  </span><span class="DefaultText">  Proc0: </span><span class="DefaultGroup1">process</span><span class="DefaultText"> (rf_enable, resetbar, debug_clk, dm_enable) </span><span class="DefaultGroup1">is</span><span class="DefaultText">     </span><span class="DefaultComment">-- EASE/HDL sens.list</span>
<span class="DefaultMargin">  388  </span><span class="DefaultText">  </span><span class="DefaultGroup1">begin</span>
<span class="DefaultMargin">  389  </span><span class="DefaultText">    </span><span class="DefaultGroup1">if</span><span class="DefaultText"> rf_enable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  390  </span><span class="DefaultText">            </span><span class="DefaultGroup1">if</span><span class="DefaultText"> resetbar = </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  391  </span><span class="DefaultText">                debug_data &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'Z'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">  392  </span><span class="DefaultText">            </span><span class="DefaultGroup1">elsif</span><span class="DefaultText"> (debug_clk=</span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  393  </span><span class="DefaultText">               debug_data &lt;= rf_data_out;</span>
<span class="DefaultMargin">  394  </span><span class="DefaultText">            </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  395  </span><span class="DefaultText">        </span><span class="DefaultGroup1">elsif</span><span class="DefaultText"> dm_enable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  396  </span><span class="DefaultText">            </span><span class="DefaultGroup1">if</span><span class="DefaultText"> resetbar = </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  397  </span><span class="DefaultText">                debug_data &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'Z'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">  398  </span><span class="DefaultText">            </span><span class="DefaultGroup1">elsif</span><span class="DefaultText"> (debug_clk = </span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  399  </span><span class="DefaultText">                debug_data &lt;= dm_data_out;</span>
<span class="DefaultMargin">  400  </span><span class="DefaultText">            </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  401  </span><span class="DefaultText">        </span><span class="DefaultGroup1">else</span>
<span class="DefaultMargin">  402  </span><span class="DefaultText">            debug_data &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'Z'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">  403  </span><span class="DefaultText">        </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  404  </span>
<span class="DefaultMargin">  405  </span><span class="DefaultText">  </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">process</span><span class="DefaultText"> Proc0 ;</span>
<span class="DefaultMargin">  406  </span><span class="DefaultText">  pc_pcout_to_ifid &lt;= pc_pcout_to_instruction_memory;</span>
<span class="DefaultMargin">  407  </span><span class="DefaultText">  pc_pcout_to_pc4adder &lt;= pc_pcout_to_instruction_memory;</span>
<span class="DefaultMargin">  408  </span><span class="DefaultText">  ifid_pcout_to_pcimmadder &lt;= ifid_pcout_to_OUT;</span>
<span class="DefaultMargin">  409  </span><span class="DefaultText">  ifid_instruction_to_immediategen &lt;=   ifid_instruction_to_OUT;</span>
<span class="DefaultMargin">  410  </span><span class="DefaultText">  ifid_pcout_to_pcimmadder &lt;= ifid_pcout_to_OUT;</span>
<span class="DefaultMargin">  411  </span><span class="DefaultText">  registers_reg1out_to_controlunit  &lt;= registers_reg1out_to_idex;</span>
<span class="DefaultMargin">  412  </span><span class="DefaultText">  registers_reg2out_to_controlunit  &lt;= registers_reg2out_to_idex;</span>
<span class="DefaultMargin">  413  </span><span class="DefaultText">  alusrcmuxb_source2_to_exmem &lt;= alusrcmuxB_rs2_to_alu;</span>
<span class="DefaultMargin">  414  </span><span class="DefaultText">  branchand_regwritecancel_to_exmem &lt;=  branchand_jumpbranchselect_to_pc_mux;</span>
<span class="DefaultMargin">  415  </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">architecture</span><span class="DefaultText"> behavioral ; </span><span class="DefaultComment">-- of internal_connections</span>
<span class="DefaultMargin">  416  </span>
<span class="DefaultMargin">  417  </span>
</pre>
</body>
</html>
