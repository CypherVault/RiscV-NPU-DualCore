<!DOCTYPE html public "-//W3C//DTD HTML 4.0 Final//EN">
<html>
<head>
<meta charset="utf-8">
<meta generator="Ease 9.5 Revision 5">
<link rel="stylesheet" type="text/css" href="easestyle.css">
<title>Concurrent Statement design.internal_connections.behavioral.concurrent0</title>
</head>
<body>
<div class="hdlw_banner"><a href="https://www.hdlworks.com">Generated by <b>Ease</b> for <i>chrisnielsen</i> on Fri Dec 13 09:05:10 2024</a></div>

<div class="hdlw_nav"><table><tr><td><a href="javascript:history.go(-1)"><img src="images/arrow_left.png">Back</a></td>
<td><a href="index.htm"><img src="images/ease.png">Index</a></td>
<td><a href="design_nus4l6t2.htm"><img src="images/library.png">design</a></td>
<td><a href="design_internal_connections_hlh5uh6r.htm"><img src="images/symbol.png">internal_connections</a></td>
<td><a href="design_internal_connections_behavioral_9onak7b9.htm"><img src="images/arch_blk.png">behavioral</a></td>
</tr>
</table>
</div>
<h1>Documentation for concurrent statement design.internal_connections.behavioral.concurrent0</h1><table class="tableContents"><tr>
<td class="grActive"><a href="design_internal_connections_behavioral_concurrent0_csj635gb.htm">Contents</a></td>
<td><a href="design_internal_connections_behavioral_concurrent0_csj635gb-d.htm">Side Data</a></td>
<td><a href="design_internal_connections_behavioral_9onak7b9-h.htm">Generated HDL</a></td>
</tr></table>
<h2>VHDL contents</h2><pre class="DefaultText">
<span class="DefaultMargin">    1  </span><span class="DefaultComment">-- EASE/HDL begin --------------------------------------------------------------</span>
<span class="DefaultMargin">    2  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    3  </span><span class="DefaultComment">-- Concurrent Statement 'concurrent0' in architecture 'behavioral' of entity 'internal_connections'.</span>
<span class="DefaultMargin">    4  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    5  </span><span class="DefaultComment">--------------------------------------------------------------------------------</span>
<span class="DefaultMargin">    6  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    7  </span><span class="DefaultComment">-- Copy of the interface signals:</span>
<span class="DefaultMargin">    8  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    9  </span><span class="DefaultComment">-- pc_pcout_to_ifid                     : out    std_logic_vector(15 downto 0);</span>
<span class="DefaultMargin">   10  </span><span class="DefaultComment">-- pc_pcout_to_instruction_memory       : in     std_logic_vector(15 downto 0);</span>
<span class="DefaultMargin">   11  </span><span class="DefaultComment">-- pc_pcout_to_pc4adder                 : out    std_logic_vector(15 downto 0);</span>
<span class="DefaultMargin">   12  </span><span class="DefaultComment">-- ifid_pcout_to_pcimmadder             : out    std_logic_vector(15 downto 0);</span>
<span class="DefaultMargin">   13  </span><span class="DefaultComment">-- ifid_pcout_to_OUT                    : in     std_logic_vector(15 downto 0);</span>
<span class="DefaultMargin">   14  </span><span class="DefaultComment">-- ifid_instruction_to_immediategen     : out    std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   15  </span><span class="DefaultComment">-- ifid_instruction_to_OUT              : in     std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   16  </span><span class="DefaultComment">-- registers_reg1out_to_controlunit     : out    std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   17  </span><span class="DefaultComment">-- registers_reg1out_to_idex            : in     std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   18  </span><span class="DefaultComment">-- registers_reg2out_to_controlunit     : out    std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   19  </span><span class="DefaultComment">-- registers_reg2out_to_idex            : in     std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   20  </span><span class="DefaultComment">-- alusrcmuxb_source2_to_exmem          : out    std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   21  </span><span class="DefaultComment">-- alusrcmuxB_rs2_to_alu                : in     std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   22  </span><span class="DefaultComment">-- branchand_regwritecancel_to_exmem    : out    std_logic;</span>
<span class="DefaultMargin">   23  </span><span class="DefaultComment">-- branchand_jumpbranchselect_to_pc_mux : in     std_logic;</span>
<span class="DefaultMargin">   24  </span><span class="DefaultComment">-- </span>
<span class="DefaultMargin">   25  </span><span class="DefaultComment">-- EASE/HDL end ----------------------------------------------------------------</span>
<span class="DefaultMargin">   26  </span><span class="DefaultText">pc_pcout_to_ifid &lt;= pc_pcout_to_instruction_memory;</span>
<span class="DefaultMargin">   27  </span><span class="DefaultText">pc_pcout_to_pc4adder &lt;= pc_pcout_to_instruction_memory;</span>
<span class="DefaultMargin">   28  </span><span class="DefaultText">ifid_pcout_to_pcimmadder &lt;= ifid_pcout_to_OUT;</span>
<span class="DefaultMargin">   29  </span><span class="DefaultText">ifid_instruction_to_immediategen &lt;= ifid_instruction_to_OUT;</span>
<span class="DefaultMargin">   30  </span><span class="DefaultText">ifid_pcout_to_pcimmadder &lt;= ifid_pcout_to_OUT;</span>
<span class="DefaultMargin">   31  </span><span class="DefaultText">registers_reg1out_to_controlunit  &lt;= registers_reg1out_to_idex;</span>
<span class="DefaultMargin">   32  </span><span class="DefaultText">registers_reg2out_to_controlunit  &lt;= registers_reg2out_to_idex;</span>
<span class="DefaultMargin">   33  </span><span class="DefaultText">alusrcmuxb_source2_to_exmem &lt;= alusrcmuxB_rs2_to_alu;</span>
<span class="DefaultMargin">   34  </span><span class="DefaultText">branchand_regwritecancel_to_exmem &lt;=    branchand_jumpbranchselect_to_pc_mux;</span>
<span class="DefaultMargin">   35  </span>
</pre>
</body>
</html>
