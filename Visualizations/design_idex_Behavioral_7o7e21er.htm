<!DOCTYPE html public "-//W3C//DTD HTML 4.0 Final//EN">
<html>
<head>
<meta charset="utf-8">
<meta generator="Ease 9.5 Revision 5">
<link rel="stylesheet" type="text/css" href="easestyle.css">
<title>Architecture design.idex.Behavioral</title>
</head>
<body>
<div class="hdlw_banner"><a href="https://www.hdlworks.com">Generated by <b>Ease</b> for <i>chrisnielsen</i> on Fri Dec 13 09:05:10 2024</a></div>

<div class="hdlw_nav"><table><tr><td><a href="javascript:history.go(-1)"><img src="images/arrow_left.png">Back</a></td>
<td><a href="index.htm"><img src="images/ease.png">Index</a></td>
<td><a href="design_nus4l6t2.htm"><img src="images/library.png">design</a></td>
<td><a href="design_idex_ajje3hhl.htm"><img src="images/symbol.png">idex</a></td>
</tr>
</table>
</div>
<h1>Documentation for architecture design.idex.Behavioral</h1><table class="tableContents"><tr>
<td class="grActive"><a href="design_idex_Behavioral_7o7e21er.htm">Contents</a></td>
<td><a href="design_idex_Behavioral_7o7e21er-d.htm">Side Data</a></td>
<td><a href="design_idex_Behavioral_7o7e21er-h.htm">Generated HDL</a></td>
</tr></table>
<h2>VHDL contents</h2><pre class="DefaultText">
<span class="DefaultMargin">    1  </span><span class="DefaultComment">-- EASE/HDL begin --------------------------------------------------------------</span>
<span class="DefaultMargin">    2  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    3  </span><span class="DefaultComment">-- Architecture 'Behavioral' of entity 'idex'.</span>
<span class="DefaultMargin">    4  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    5  </span><span class="DefaultComment">--------------------------------------------------------------------------------</span>
<span class="DefaultMargin">    6  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    7  </span><span class="DefaultComment">-- Copy of the interface declaration:</span>
<span class="DefaultMargin">    8  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    9  </span><span class="DefaultComment">--   port (</span>
<span class="DefaultMargin">   10  </span><span class="DefaultComment">--     clk            : in     STD_LOGIC;</span>
<span class="DefaultMargin">   11  </span><span class="DefaultComment">--     rstbar         : in     STD_LOGIC;</span>
<span class="DefaultMargin">   12  </span><span class="DefaultComment">--     pcin           : in     STD_LOGIC_VECTOR(15 downto 0);</span>
<span class="DefaultMargin">   13  </span><span class="DefaultComment">--     instructionin  : in     STD_LOGIC_VECTOR(31 downto 0);</span>
<span class="DefaultMargin">   14  </span><span class="DefaultComment">--     instructionout : out    STD_LOGIC_VECTOR(31 downto 0);</span>
<span class="DefaultMargin">   15  </span><span class="DefaultComment">--     readdata1in    : in     STD_LOGIC_VECTOR(31 downto 0);</span>
<span class="DefaultMargin">   16  </span><span class="DefaultComment">--     readdata2in    : in     STD_LOGIC_VECTOR(31 downto 0);</span>
<span class="DefaultMargin">   17  </span><span class="DefaultComment">--     immediatein    : in     STD_LOGIC_VECTOR(31 downto 0);</span>
<span class="DefaultMargin">   18  </span><span class="DefaultComment">--     immediateout   : out    STD_LOGIC_VECTOR(31 downto 0);</span>
<span class="DefaultMargin">   19  </span><span class="DefaultComment">--     pcout          : out    STD_LOGIC_VECTOR(15 downto 0);</span>
<span class="DefaultMargin">   20  </span><span class="DefaultComment">--     readdata1out   : out    STD_LOGIC_VECTOR(31 downto 0);</span>
<span class="DefaultMargin">   21  </span><span class="DefaultComment">--     readdata2out   : out    STD_LOGIC_VECTOR(31 downto 0);</span>
<span class="DefaultMargin">   22  </span><span class="DefaultComment">--     MemtoRegin     : in     std_logic; -- WB</span>
<span class="DefaultMargin">   23  </span><span class="DefaultComment">--     RegWritein     : in     std_logic;</span>
<span class="DefaultMargin">   24  </span><span class="DefaultComment">--     MemReadin      : in     std_logic; -- M</span>
<span class="DefaultMargin">   25  </span><span class="DefaultComment">--     MemWritein     : in     std_logic;</span>
<span class="DefaultMargin">   26  </span><span class="DefaultComment">--     Branchin       : in     std_logic;</span>
<span class="DefaultMargin">   27  </span><span class="DefaultComment">--     ALUSrcin       : in     std_logic; -- EX</span>
<span class="DefaultMargin">   28  </span><span class="DefaultComment">--     ALUOpin        : in     std_logic_vector(1 downto 0);</span>
<span class="DefaultMargin">   29  </span><span class="DefaultComment">--     MemtoRegout    : out    std_logic; -- WB</span>
<span class="DefaultMargin">   30  </span><span class="DefaultComment">--     RegWriteout    : out    std_logic;</span>
<span class="DefaultMargin">   31  </span><span class="DefaultComment">--     MemReadout     : out    std_logic; -- M</span>
<span class="DefaultMargin">   32  </span><span class="DefaultComment">--     MemWriteout    : out    std_logic;</span>
<span class="DefaultMargin">   33  </span><span class="DefaultComment">--     Branchout      : out    std_logic;</span>
<span class="DefaultMargin">   34  </span><span class="DefaultComment">--     ALUSrc         : out    std_logic; -- EX</span>
<span class="DefaultMargin">   35  </span><span class="DefaultComment">--     ALUOp          : out    std_logic_vector(1 downto 0);</span>
<span class="DefaultMargin">   36  </span><span class="DefaultComment">--     rs1in          : in     STD_LOGIC_VECTOR(4 downto 0);</span>
<span class="DefaultMargin">   37  </span><span class="DefaultComment">--     rs2in          : in     STD_LOGIC_VECTOR(4 downto 0);</span>
<span class="DefaultMargin">   38  </span><span class="DefaultComment">--     rdin           : in     STD_LOGIC_VECTOR(4 downto 0);</span>
<span class="DefaultMargin">   39  </span><span class="DefaultComment">--     rs1out         : out    STD_LOGIC_VECTOR(4 downto 0);</span>
<span class="DefaultMargin">   40  </span><span class="DefaultComment">--     rs2out         : out    STD_LOGIC_VECTOR(4 downto 0);</span>
<span class="DefaultMargin">   41  </span><span class="DefaultComment">--     rdout          : out    STD_LOGIC_VECTOR(4 downto 0));</span>
<span class="DefaultMargin">   42  </span><span class="DefaultComment">-- </span>
<span class="DefaultMargin">   43  </span><span class="DefaultComment">-- EASE/HDL end ----------------------------------------------------------------</span>
<span class="DefaultMargin">   44  </span><span class="DefaultGroup1">architecture</span><span class="DefaultText"> Behavioral </span><span class="DefaultGroup1">of</span><span class="DefaultText"> idex </span><span class="DefaultGroup1">is</span>
<span class="DefaultMargin">   45  </span><span class="DefaultText">     </span>
<span class="DefaultMargin">   46  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> pcin_reg          : </span><span class="DefaultGroup3">STD_LOGIC_VECTOR</span><span class="DefaultText">(15 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   47  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> readdata1_reg     : </span><span class="DefaultGroup3">STD_LOGIC_VECTOR</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   48  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> readdata2_reg     : </span><span class="DefaultGroup3">STD_LOGIC_VECTOR</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   49  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> immediate_reg     : </span><span class="DefaultGroup3">STD_LOGIC_VECTOR</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);      </span>
<span class="DefaultMargin">   50  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> instruction_reg   : </span><span class="DefaultGroup3">STD_LOGIC_VECTOR</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   51  </span><span class="DefaultText">    </span>
<span class="DefaultMargin">   52  </span><span class="DefaultText">    </span><span class="DefaultComment">--WB</span>
<span class="DefaultMargin">   53  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> MemtoReg_reg      : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   54  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> RegWrite_reg      : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   55  </span><span class="DefaultText">    </span>
<span class="DefaultMargin">   56  </span><span class="DefaultText">    </span><span class="DefaultComment">--M</span>
<span class="DefaultMargin">   57  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> MemRead_reg       : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   58  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> MemWrite_reg      : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   59  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> Branch_reg        : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;      </span>
<span class="DefaultMargin">   60  </span><span class="DefaultText">    </span>
<span class="DefaultMargin">   61  </span><span class="DefaultText">    </span><span class="DefaultComment">--EX</span>
<span class="DefaultMargin">   62  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> ALUSrc_reg        : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   63  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> ALUOp_reg         : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(1 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   64  </span><span class="DefaultText">        </span>
<span class="DefaultMargin">   65  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> rs1_reg           : </span><span class="DefaultGroup3">STD_LOGIC_VECTOR</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);    </span>
<span class="DefaultMargin">   66  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> rs2_reg           : </span><span class="DefaultGroup3">STD_LOGIC_VECTOR</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);    </span>
<span class="DefaultMargin">   67  </span><span class="DefaultText">    </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> rd_reg            : </span><span class="DefaultGroup3">STD_LOGIC_VECTOR</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);         </span>
<span class="DefaultMargin">   68  </span><span class="DefaultText">    </span>
<span class="DefaultMargin">   69  </span><span class="DefaultGroup1">begin</span>
<span class="DefaultMargin">   70  </span><span class="DefaultText">    </span><span class="DefaultGroup1">process</span><span class="DefaultText"> (clk, rstbar)</span>
<span class="DefaultMargin">   71  </span><span class="DefaultText">    </span><span class="DefaultGroup1">begin</span>
<span class="DefaultMargin">   72  </span><span class="DefaultText">        </span><span class="DefaultGroup1">if</span><span class="DefaultText"> rstbar = </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">   73  </span><span class="DefaultText">            </span><span class="DefaultComment">-- Asynchronous reset</span>
<span class="DefaultMargin">   74  </span><span class="DefaultText">            pcin_reg         &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">   75  </span><span class="DefaultText">            readdata1_reg    &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">   76  </span><span class="DefaultText">            readdata2_reg    &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">   77  </span><span class="DefaultText">            immediate_reg    &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);     </span>
<span class="DefaultMargin">   78  </span><span class="DefaultText">            instruction_reg  &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);    </span>
<span class="DefaultMargin">   79  </span><span class="DefaultText">            </span>
<span class="DefaultMargin">   80  </span><span class="DefaultText">            MemtoReg_reg     &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   81  </span><span class="DefaultText">            RegWrite_reg     &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   82  </span><span class="DefaultText">            MemRead_reg      &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   83  </span><span class="DefaultText">            MemWrite_reg     &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   84  </span><span class="DefaultText">            Branch_reg       &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   85  </span><span class="DefaultText">            ALUSrc_reg       &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   86  </span><span class="DefaultText">            ALUOp_reg        &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">   87  </span><span class="DefaultText">            </span>
<span class="DefaultMargin">   88  </span><span class="DefaultText">            rs1_reg          &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">   89  </span><span class="DefaultText">            rs2_reg          &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">   90  </span><span class="DefaultText">            rd_reg           &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">   91  </span><span class="DefaultText">            </span>
<span class="DefaultMargin">   92  </span><span class="DefaultText">        </span><span class="DefaultGroup1">elsif</span><span class="DefaultText"> </span><span class="DefaultGroup3">rising_edge</span><span class="DefaultText">(clk) </span><span class="DefaultGroup1">then</span><span class="DefaultText"> </span>
<span class="DefaultMargin">   93  </span><span class="DefaultText">            </span><span class="DefaultComment">-- Normal operation</span>
<span class="DefaultMargin">   94  </span><span class="DefaultText">            pcin_reg         &lt;= pcin;</span>
<span class="DefaultMargin">   95  </span><span class="DefaultText">            readdata1_reg    &lt;= readdata1in;</span>
<span class="DefaultMargin">   96  </span><span class="DefaultText">            readdata2_reg    &lt;= readdata2in;</span>
<span class="DefaultMargin">   97  </span><span class="DefaultText">            immediate_reg    &lt;= immediatein;</span>
<span class="DefaultMargin">   98  </span><span class="DefaultText">            instruction_reg  &lt;= instructionin;</span>
<span class="DefaultMargin">   99  </span><span class="DefaultText">            </span>
<span class="DefaultMargin">  100  </span><span class="DefaultText">            </span><span class="DefaultComment">-- Normal control signal passing</span>
<span class="DefaultMargin">  101  </span><span class="DefaultText">            MemtoReg_reg     &lt;= MemtoRegin;</span>
<span class="DefaultMargin">  102  </span><span class="DefaultText">            RegWrite_reg     &lt;= RegWritein;</span>
<span class="DefaultMargin">  103  </span><span class="DefaultText">            MemRead_reg      &lt;= MemReadin;</span>
<span class="DefaultMargin">  104  </span><span class="DefaultText">            MemWrite_reg     &lt;= MemWritein;</span>
<span class="DefaultMargin">  105  </span><span class="DefaultText">            Branch_reg       &lt;= Branchin;</span>
<span class="DefaultMargin">  106  </span><span class="DefaultText">            ALUSrc_reg       &lt;= ALUSrcin;</span>
<span class="DefaultMargin">  107  </span><span class="DefaultText">            ALUOp_reg        &lt;= ALUOpin;</span>
<span class="DefaultMargin">  108  </span><span class="DefaultText">            </span>
<span class="DefaultMargin">  109  </span><span class="DefaultText">            </span><span class="DefaultComment">-- Normal register address passing</span>
<span class="DefaultMargin">  110  </span><span class="DefaultText">            rs1_reg          &lt;= rs1in;</span>
<span class="DefaultMargin">  111  </span><span class="DefaultText">            rs2_reg          &lt;= rs2in;</span>
<span class="DefaultMargin">  112  </span><span class="DefaultText">            rd_reg           &lt;= rdin;</span>
<span class="DefaultMargin">  113  </span><span class="DefaultText">        </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  114  </span><span class="DefaultText">    </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">process</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  115  </span>
<span class="DefaultMargin">  116  </span><span class="DefaultText">    </span><span class="DefaultComment">-- Continuous assignments for outputs</span>
<span class="DefaultMargin">  117  </span><span class="DefaultText">    pcout         &lt;= pcin_reg;</span>
<span class="DefaultMargin">  118  </span><span class="DefaultText">    readdata1out  &lt;= readdata1_reg;</span>
<span class="DefaultMargin">  119  </span><span class="DefaultText">    readdata2out  &lt;= readdata2_reg;</span>
<span class="DefaultMargin">  120  </span><span class="DefaultText">    immediateout  &lt;= immediate_reg; </span>
<span class="DefaultMargin">  121  </span><span class="DefaultText">    instructionout &lt;= instruction_reg; </span>
<span class="DefaultMargin">  122  </span><span class="DefaultText">    </span>
<span class="DefaultMargin">  123  </span><span class="DefaultText">    MemtoRegout   &lt;= MemtoReg_reg;</span>
<span class="DefaultMargin">  124  </span><span class="DefaultText">    RegWriteout   &lt;= RegWrite_reg;</span>
<span class="DefaultMargin">  125  </span><span class="DefaultText">    MemReadout    &lt;= MemRead_reg;</span>
<span class="DefaultMargin">  126  </span><span class="DefaultText">    MemWriteout   &lt;= MemWrite_reg;</span>
<span class="DefaultMargin">  127  </span><span class="DefaultText">    Branchout     &lt;= Branch_reg;</span>
<span class="DefaultMargin">  128  </span>
<span class="DefaultMargin">  129  </span><span class="DefaultText">    ALUSrc        &lt;= ALUSrc_reg;</span>
<span class="DefaultMargin">  130  </span><span class="DefaultText">    ALUOp         &lt;= ALUOp_reg;</span>
<span class="DefaultMargin">  131  </span>
<span class="DefaultMargin">  132  </span><span class="DefaultText">    rs1out        &lt;= rs1_reg;</span>
<span class="DefaultMargin">  133  </span><span class="DefaultText">    rs2out        &lt;= rs2_reg;</span>
<span class="DefaultMargin">  134  </span><span class="DefaultText">    rdout         &lt;= rd_reg;</span>
<span class="DefaultMargin">  135  </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">architecture</span><span class="DefaultText"> Behavioral ; </span><span class="DefaultComment">-- of idex</span>
<span class="DefaultMargin">  136  </span>
</pre>
</body>
</html>
