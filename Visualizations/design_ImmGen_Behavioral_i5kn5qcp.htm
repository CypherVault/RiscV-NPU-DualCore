<!DOCTYPE html public "-//W3C//DTD HTML 4.0 Final//EN">
<html>
<head>
<meta charset="utf-8">
<meta generator="Ease 9.5 Revision 5">
<link rel="stylesheet" type="text/css" href="easestyle.css">
<title>Architecture design.ImmGen.Behavioral</title>
</head>
<body>
<div class="hdlw_banner"><a href="https://www.hdlworks.com">Generated by <b>Ease</b> for <i>chrisnielsen</i> on Fri Dec 13 09:05:10 2024</a></div>

<div class="hdlw_nav"><table><tr><td><a href="javascript:history.go(-1)"><img src="images/arrow_left.png">Back</a></td>
<td><a href="index.htm"><img src="images/ease.png">Index</a></td>
<td><a href="design_nus4l6t2.htm"><img src="images/library.png">design</a></td>
<td><a href="design_ImmGen_5tuimev2.htm"><img src="images/symbol.png">ImmGen</a></td>
</tr>
</table>
</div>
<h1>Documentation for architecture design.ImmGen.Behavioral</h1><table class="tableContents"><tr>
<td class="grActive"><a href="design_ImmGen_Behavioral_i5kn5qcp.htm">Contents</a></td>
<td><a href="design_ImmGen_Behavioral_i5kn5qcp-d.htm">Side Data</a></td>
<td><a href="design_ImmGen_Behavioral_i5kn5qcp-h.htm">Generated HDL</a></td>
</tr></table>
<h2>VHDL contents</h2><pre class="DefaultText">
<span class="DefaultMargin">    1  </span><span class="DefaultComment">-- EASE/HDL begin --------------------------------------------------------------</span>
<span class="DefaultMargin">    2  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    3  </span><span class="DefaultComment">-- Architecture 'Behavioral' of entity 'ImmGen'.</span>
<span class="DefaultMargin">    4  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    5  </span><span class="DefaultComment">--------------------------------------------------------------------------------</span>
<span class="DefaultMargin">    6  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    7  </span><span class="DefaultComment">-- Copy of the interface declaration:</span>
<span class="DefaultMargin">    8  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    9  </span><span class="DefaultComment">--   port (</span>
<span class="DefaultMargin">   10  </span><span class="DefaultComment">--     instruction : in     std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   11  </span><span class="DefaultComment">--     pcadderimm  : out    std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   12  </span><span class="DefaultComment">--     immediate   : out    std_logic_vector(31 downto 0));</span>
<span class="DefaultMargin">   13  </span><span class="DefaultComment">-- </span>
<span class="DefaultMargin">   14  </span><span class="DefaultComment">-- EASE/HDL end ----------------------------------------------------------------</span>
<span class="DefaultMargin">   15  </span><span class="DefaultGroup1">architecture</span><span class="DefaultText"> Behavioral </span><span class="DefaultGroup1">of</span><span class="DefaultText"> ImmGen </span><span class="DefaultGroup1">is</span>
<span class="DefaultMargin">   16  </span><span class="DefaultGroup1">begin</span>
<span class="DefaultMargin">   17  </span><span class="DefaultText">  </span><span class="DefaultGroup1">process</span><span class="DefaultText">(instruction)</span>
<span class="DefaultMargin">   18  </span><span class="DefaultText">    </span><span class="DefaultGroup1">variable</span><span class="DefaultText"> opcode : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(6 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   19  </span><span class="DefaultText">  </span><span class="DefaultGroup1">begin</span>
<span class="DefaultMargin">   20  </span><span class="DefaultText">    opcode := instruction(6 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   21  </span><span class="DefaultText">    </span>
<span class="DefaultMargin">   22  </span><span class="DefaultText">    </span><span class="DefaultGroup1">case</span><span class="DefaultText"> opcode </span><span class="DefaultGroup1">is</span>
<span class="DefaultMargin">   23  </span><span class="DefaultText">      </span><span class="DefaultComment">-- I-type instructions</span>
<span class="DefaultMargin">   24  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;1100111&quot;</span><span class="DefaultText"> | </span><span class="DefaultStrings">&quot;0000011&quot;</span><span class="DefaultText"> | </span><span class="DefaultStrings">&quot;0010011&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   25  </span><span class="DefaultText">        immediate &lt;= </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(resize(</span><span class="DefaultGroup3">signed</span><span class="DefaultText">(instruction(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 20)), 32));</span>
<span class="DefaultMargin">   26  </span><span class="DefaultText">         pcadderimm &lt;= </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(resize(</span><span class="DefaultGroup3">signed</span><span class="DefaultText">(instruction(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 20)), 32));</span>
<span class="DefaultMargin">   27  </span><span class="DefaultText">      </span><span class="DefaultComment">-- S-type instructions</span>
<span class="DefaultMargin">   28  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;0100011&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   29  </span><span class="DefaultText">        immediate &lt;= </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(resize(</span><span class="DefaultGroup3">signed</span><span class="DefaultText">(instruction(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 25) &amp; instruction(11 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 7)), 32));</span>
<span class="DefaultMargin">   30  </span><span class="DefaultText">        pcadderimm &lt;= </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(resize(</span><span class="DefaultGroup3">signed</span><span class="DefaultText">(instruction(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 25) &amp; instruction(11 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 7)), 32));</span>
<span class="DefaultMargin">   31  </span><span class="DefaultText">      </span><span class="DefaultComment">-- B-type instructions</span>
<span class="DefaultMargin">   32  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;1100011&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   33  </span><span class="DefaultText">        immediate &lt;= </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(resize(</span><span class="DefaultGroup3">signed</span><span class="DefaultText">(instruction(31) &amp; instruction(7) &amp; instruction(30 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 25) &amp; instruction(11 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 8) &amp; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">), 32));</span>
<span class="DefaultMargin">   34  </span><span class="DefaultText">        pcadderimm &lt;= </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(resize(</span><span class="DefaultGroup3">signed</span><span class="DefaultText">(instruction(31) &amp; instruction(7) &amp; instruction(30 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 25) &amp; instruction(11 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 8) &amp; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">), 32));</span>
<span class="DefaultMargin">   35  </span><span class="DefaultText">      </span><span class="DefaultComment">-- U-type instructions</span>
<span class="DefaultMargin">   36  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;0110111&quot;</span><span class="DefaultText"> | </span><span class="DefaultStrings">&quot;0010111&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   37  </span><span class="DefaultText">        immediate &lt;= instruction(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 12) &amp; x</span><span class="DefaultStrings">&quot;000&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   38  </span><span class="DefaultText">         pcadderimm &lt;= instruction(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 12) &amp; x</span><span class="DefaultStrings">&quot;000&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   39  </span><span class="DefaultText">      </span><span class="DefaultComment">-- J-type instructions</span>
<span class="DefaultMargin">   40  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;1101111&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   41  </span><span class="DefaultText">        immediate &lt;= </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(resize(</span><span class="DefaultGroup3">signed</span><span class="DefaultText">(instruction(31) &amp; instruction(19 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 12) &amp; instruction(20) &amp; instruction(30 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 21) &amp; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">), 32));</span>
<span class="DefaultMargin">   42  </span><span class="DefaultText">        pcadderimm &lt;= </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(resize(</span><span class="DefaultGroup3">signed</span><span class="DefaultText">(instruction(31) &amp; instruction(19 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 12) &amp; instruction(20) &amp; instruction(30 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 21) &amp; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">), 32));</span>
<span class="DefaultMargin">   43  </span><span class="DefaultText">     </span>
<span class="DefaultMargin">   44  </span><span class="DefaultText">         immediate &lt;= </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(resize(</span><span class="DefaultGroup3">signed</span><span class="DefaultText">(instruction(31) &amp; instruction(19 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 12) &amp; instruction(20) &amp; instruction(30 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 21) &amp; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">), 32)); </span>
<span class="DefaultMargin">   45  </span><span class="DefaultText">          </span>
<span class="DefaultMargin">   46  </span><span class="DefaultText">          </span>
<span class="DefaultMargin">   47  </span><span class="DefaultText">          </span><span class="DefaultComment">-- Default case</span>
<span class="DefaultMargin">   48  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   49  </span><span class="DefaultText">      immediate &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">); </span>
<span class="DefaultMargin">   50  </span><span class="DefaultText">       pcadderimm &lt;= (</span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt; </span><span class="DefaultStrings">'0'</span><span class="DefaultText">);</span>
<span class="DefaultMargin">   51  </span><span class="DefaultText">    </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">case</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   52  </span><span class="DefaultText">  </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">process</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   53  </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">architecture</span><span class="DefaultText"> Behavioral ; </span><span class="DefaultComment">-- of ImmGen</span>
<span class="DefaultMargin">   54  </span>
</pre>
</body>
</html>
