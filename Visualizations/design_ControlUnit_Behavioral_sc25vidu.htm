<!DOCTYPE html public "-//W3C//DTD HTML 4.0 Final//EN">
<html>
<head>
<meta charset="utf-8">
<meta generator="Ease 9.5 Revision 5">
<link rel="stylesheet" type="text/css" href="easestyle.css">
<title>Architecture design.ControlUnit.Behavioral</title>
</head>
<body>
<div class="hdlw_banner"><a href="https://www.hdlworks.com">Generated by <b>Ease</b> for <i>chrisnielsen</i> on Fri Dec 13 09:05:10 2024</a></div>

<div class="hdlw_nav"><table><tr><td><a href="javascript:history.go(-1)"><img src="images/arrow_left.png">Back</a></td>
<td><a href="index.htm"><img src="images/ease.png">Index</a></td>
<td><a href="design_nus4l6t2.htm"><img src="images/library.png">design</a></td>
<td><a href="design_ControlUnit_fe94ekjk.htm"><img src="images/symbol.png">ControlUnit</a></td>
</tr>
</table>
</div>
<h1>Documentation for architecture design.ControlUnit.Behavioral</h1><table class="tableContents"><tr>
<td class="grActive"><a href="design_ControlUnit_Behavioral_sc25vidu.htm">Contents</a></td>
<td><a href="design_ControlUnit_Behavioral_sc25vidu-d.htm">Side Data</a></td>
<td><a href="design_ControlUnit_Behavioral_sc25vidu-h.htm">Generated HDL</a></td>
</tr></table>
<h2>VHDL contents</h2><pre class="DefaultText">
<span class="DefaultMargin">    1  </span><span class="DefaultComment">-- EASE/HDL begin --------------------------------------------------------------</span>
<span class="DefaultMargin">    2  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    3  </span><span class="DefaultComment">-- Architecture 'Behavioral' of entity 'ControlUnit'.</span>
<span class="DefaultMargin">    4  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    5  </span><span class="DefaultComment">--------------------------------------------------------------------------------</span>
<span class="DefaultMargin">    6  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    7  </span><span class="DefaultComment">-- Copy of the interface declaration:</span>
<span class="DefaultMargin">    8  </span><span class="DefaultComment">--</span>
<span class="DefaultMargin">    9  </span><span class="DefaultComment">--   port (</span>
<span class="DefaultMargin">   10  </span><span class="DefaultComment">--     instruction   : in     std_logic_vector(31 downto 0); -- Inputs</span>
<span class="DefaultMargin">   11  </span><span class="DefaultComment">--     cntrlsigmux   : in     std_logic;</span>
<span class="DefaultMargin">   12  </span><span class="DefaultComment">--     rs1_data      : in     std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   13  </span><span class="DefaultComment">--     rs2_data      : in     std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   14  </span><span class="DefaultComment">--     exmem_rd      : in     std_logic_vector(4 downto 0);</span>
<span class="DefaultMargin">   15  </span><span class="DefaultComment">--     exmem_regdata : in     std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   16  </span><span class="DefaultComment">--     memwb_rd      : in     std_logic_vector(4 downto 0);</span>
<span class="DefaultMargin">   17  </span><span class="DefaultComment">--     memwb_regdata : in     std_logic_vector(31 downto 0);</span>
<span class="DefaultMargin">   18  </span><span class="DefaultComment">--     MemtoReg      : out    std_logic; -- -- Outputs      </span>
<span class="DefaultMargin">   19  </span><span class="DefaultComment">--     RegWrite      : out    std_logic;</span>
<span class="DefaultMargin">   20  </span><span class="DefaultComment">--     MemRead       : out    std_logic; -- M</span>
<span class="DefaultMargin">   21  </span><span class="DefaultComment">--     MemWrite      : out    std_logic;</span>
<span class="DefaultMargin">   22  </span><span class="DefaultComment">--     Branch        : out    std_logic;</span>
<span class="DefaultMargin">   23  </span><span class="DefaultComment">--     ALUSrc        : out    std_logic; -- EX</span>
<span class="DefaultMargin">   24  </span><span class="DefaultComment">--     ALUOp         : out    std_logic_vector(1 downto 0);</span>
<span class="DefaultMargin">   25  </span><span class="DefaultComment">--     if_flush      : out    std_logic; -- New output for early branch resolution</span>
<span class="DefaultMargin">   26  </span><span class="DefaultComment">--     early_branch  : out    std_logic;</span>
<span class="DefaultMargin">   27  </span><span class="DefaultComment">--     ctrl_disable  : in     std_logic); -- input to deal with rare lockup condition</span>
<span class="DefaultMargin">   28  </span><span class="DefaultComment">-- </span>
<span class="DefaultMargin">   29  </span><span class="DefaultComment">-- EASE/HDL end ----------------------------------------------------------------</span>
<span class="DefaultMargin">   30  </span><span class="DefaultGroup1">architecture</span><span class="DefaultText"> Behavioral </span><span class="DefaultGroup1">of</span><span class="DefaultText"> ControlUnit </span><span class="DefaultGroup1">is</span>
<span class="DefaultMargin">   31  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> rs1_addr : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   32  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> rs2_addr : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(4 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   33  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> rs1_final : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   34  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> rs2_final : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(31 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   35  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> branch_taken : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   36  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> is_branch_instruction : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   37  </span><span class="DefaultText">  </span>
<span class="DefaultMargin">   38  </span><span class="DefaultText">  </span><span class="DefaultComment">-- Internal signals for control outputs</span>
<span class="DefaultMargin">   39  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> int_MemtoReg, int_RegWrite, int_MemRead, int_MemWrite, int_Branch, int_ALUSrc, int_early_branch : </span><span class="DefaultGroup3">std_logic</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   40  </span><span class="DefaultText">  </span><span class="DefaultGroup1">signal</span><span class="DefaultText"> int_ALUOp : </span><span class="DefaultGroup3">std_logic_vector</span><span class="DefaultText">(1 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0);</span>
<span class="DefaultMargin">   41  </span><span class="DefaultGroup1">begin</span>
<span class="DefaultMargin">   42  </span><span class="DefaultText">  </span><span class="DefaultComment">-- Extract rs1 and rs2 addresses from instruction</span>
<span class="DefaultMargin">   43  </span><span class="DefaultText">  rs1_addr &lt;= instruction(19 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 15);</span>
<span class="DefaultMargin">   44  </span><span class="DefaultText">  rs2_addr &lt;= instruction(24 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 20);</span>
<span class="DefaultMargin">   45  </span>
<span class="DefaultMargin">   46  </span><span class="DefaultText">  </span><span class="DefaultComment">-- Select the most recent version of rs1 data</span>
<span class="DefaultMargin">   47  </span><span class="DefaultText">rs1_final &lt;= exmem_regdata </span><span class="DefaultGroup1">when</span><span class="DefaultText"> rs1_addr = exmem_rd </span><span class="DefaultGroup1">else</span>
<span class="DefaultMargin">   48  </span><span class="DefaultText">             memwb_regdata </span><span class="DefaultGroup1">when</span><span class="DefaultText"> rs1_addr = memwb_rd </span><span class="DefaultGroup1">else</span>
<span class="DefaultMargin">   49  </span><span class="DefaultText">             rs1_data;</span>
<span class="DefaultMargin">   50  </span>
<span class="DefaultMargin">   51  </span><span class="DefaultComment">-- Select the most recent version of rs2 data</span>
<span class="DefaultMargin">   52  </span><span class="DefaultText">rs2_final &lt;= exmem_regdata </span><span class="DefaultGroup1">when</span><span class="DefaultText"> rs2_addr = exmem_rd </span><span class="DefaultGroup1">else</span>
<span class="DefaultMargin">   53  </span><span class="DefaultText">             memwb_regdata </span><span class="DefaultGroup1">when</span><span class="DefaultText"> rs2_addr = memwb_rd </span><span class="DefaultGroup1">else</span>
<span class="DefaultMargin">   54  </span><span class="DefaultText">             rs2_data;</span>
<span class="DefaultMargin">   55  </span>
<span class="DefaultMargin">   56  </span><span class="DefaultText">  </span><span class="DefaultGroup1">process</span><span class="DefaultText">(instruction, rs1_final, rs2_final)</span>
<span class="DefaultMargin">   57  </span><span class="DefaultText">  </span><span class="DefaultGroup1">begin</span>
<span class="DefaultMargin">   58  </span><span class="DefaultText">    </span><span class="DefaultComment">-- Default values</span>
<span class="DefaultMargin">   59  </span><span class="DefaultText">    int_ALUSrc &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   60  </span><span class="DefaultText">    int_MemtoReg &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   61  </span><span class="DefaultText">    int_RegWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   62  </span><span class="DefaultText">    int_MemRead &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   63  </span><span class="DefaultText">    int_MemWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   64  </span><span class="DefaultText">    int_Branch &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   65  </span><span class="DefaultText">    int_ALUOp &lt;= </span><span class="DefaultStrings">&quot;00&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   66  </span><span class="DefaultText">    if_flush &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   67  </span><span class="DefaultText">    branch_taken &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   68  </span><span class="DefaultText">    is_branch_instruction &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   69  </span><span class="DefaultText">    int_early_branch &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   70  </span>
<span class="DefaultMargin">   71  </span><span class="DefaultText">    </span><span class="DefaultGroup1">case</span><span class="DefaultText"> instruction(6 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 0) </span><span class="DefaultGroup1">is</span>
<span class="DefaultMargin">   72  </span><span class="DefaultText">      </span><span class="DefaultComment">-- R-format</span>
<span class="DefaultMargin">   73  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;0110011&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   74  </span><span class="DefaultText">        int_ALUSrc &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   75  </span><span class="DefaultText">        int_MemtoReg &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   76  </span><span class="DefaultText">        int_RegWrite &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   77  </span><span class="DefaultText">        int_ALUOp &lt;= </span><span class="DefaultStrings">&quot;10&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   78  </span>
<span class="DefaultMargin">   79  </span><span class="DefaultText">      </span><span class="DefaultComment">-- I-format arithmetic (including ADDI)</span>
<span class="DefaultMargin">   80  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;0010011&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   81  </span><span class="DefaultText">        int_ALUSrc &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   82  </span><span class="DefaultText">        int_MemtoReg &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   83  </span><span class="DefaultText">        int_RegWrite &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   84  </span><span class="DefaultText">        int_ALUOp &lt;= </span><span class="DefaultStrings">&quot;10&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   85  </span>
<span class="DefaultMargin">   86  </span><span class="DefaultText">      </span><span class="DefaultComment">-- lw (load word)</span>
<span class="DefaultMargin">   87  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;0000011&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   88  </span><span class="DefaultText">        int_ALUSrc &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   89  </span><span class="DefaultText">        int_MemtoReg &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   90  </span><span class="DefaultText">        int_RegWrite &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   91  </span><span class="DefaultText">        int_MemRead &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   92  </span><span class="DefaultText">        int_ALUOp &lt;= </span><span class="DefaultStrings">&quot;00&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   93  </span>
<span class="DefaultMargin">   94  </span><span class="DefaultText">      </span><span class="DefaultComment">-- sw (store word)</span>
<span class="DefaultMargin">   95  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;0100011&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">   96  </span><span class="DefaultText">        int_ALUSrc &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   97  </span><span class="DefaultText">        int_MemWrite &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   98  </span><span class="DefaultText">        int_ALUOp &lt;= </span><span class="DefaultStrings">&quot;00&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">   99  </span><span class="DefaultText">        </span>
<span class="DefaultMargin">  100  </span><span class="DefaultText">        </span>
<span class="DefaultMargin">  101  </span><span class="DefaultText">        </span>
<span class="DefaultMargin">  102  </span><span class="DefaultText">   </span><span class="DefaultComment">-- In the branch case (1100011), add handling for all branch types:</span>
<span class="DefaultMargin">  103  </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;1100011&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  104  </span><span class="DefaultText">                int_Branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  105  </span><span class="DefaultText">                int_ALUOp &lt;= </span><span class="DefaultStrings">&quot;01&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  106  </span><span class="DefaultText">                is_branch_instruction &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  107  </span>
<span class="DefaultMargin">  108  </span><span class="DefaultText">    </span><span class="DefaultGroup1">case</span><span class="DefaultText"> instruction(14 </span><span class="DefaultGroup1">downto</span><span class="DefaultText"> 12) </span><span class="DefaultGroup1">is</span>
<span class="DefaultMargin">  109  </span><span class="DefaultText">        </span><span class="DefaultComment">-- BEQ (000)</span>
<span class="DefaultMargin">  110  </span><span class="DefaultText">        </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;000&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  111  </span><span class="DefaultText">            </span><span class="DefaultGroup1">if</span><span class="DefaultText"> rs1_final = rs2_final </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  112  </span><span class="DefaultText">                branch_taken &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  113  </span><span class="DefaultText">                int_early_branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">; </span>
<span class="DefaultMargin">  114  </span><span class="DefaultText">                int_RegWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;  </span><span class="DefaultComment">-- Prevent write-back when branching</span>
<span class="DefaultMargin">  115  </span><span class="DefaultText">            </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  116  </span>
<span class="DefaultMargin">  117  </span><span class="DefaultText">        </span><span class="DefaultComment">-- BNE (001)</span>
<span class="DefaultMargin">  118  </span><span class="DefaultText">        </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;001&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  119  </span><span class="DefaultText">            </span><span class="DefaultGroup1">if</span><span class="DefaultText"> rs1_final /= rs2_final </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  120  </span><span class="DefaultText">                branch_taken &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  121  </span><span class="DefaultText">                int_early_branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">; </span>
<span class="DefaultMargin">  122  </span><span class="DefaultText">                int_RegWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;  </span><span class="DefaultComment">-- Prevent write-back when branching</span>
<span class="DefaultMargin">  123  </span><span class="DefaultText">            </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  124  </span>
<span class="DefaultMargin">  125  </span><span class="DefaultText">        </span><span class="DefaultComment">-- BLT (100)</span>
<span class="DefaultMargin">  126  </span><span class="DefaultText">            </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;100&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  127  </span><span class="DefaultText">                </span><span class="DefaultGroup1">if</span><span class="DefaultText"> </span><span class="DefaultGroup3">signed</span><span class="DefaultText">(rs1_final) &lt; </span><span class="DefaultGroup3">signed</span><span class="DefaultText">(rs2_final) </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  128  </span><span class="DefaultText">                    branch_taken &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  129  </span><span class="DefaultText">                    int_early_branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  130  </span><span class="DefaultText">                    if_flush &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">; </span>
<span class="DefaultMargin">  131  </span><span class="DefaultText">                    int_RegWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;  </span><span class="DefaultComment">-- Prevent write-back when branching</span>
<span class="DefaultMargin">  132  </span><span class="DefaultText">                </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  133  </span>
<span class="DefaultMargin">  134  </span><span class="DefaultText">        </span><span class="DefaultComment">-- BGE (101)</span>
<span class="DefaultMargin">  135  </span><span class="DefaultText">        </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;101&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  136  </span><span class="DefaultText">            </span><span class="DefaultGroup1">if</span><span class="DefaultText"> </span><span class="DefaultGroup3">signed</span><span class="DefaultText">(rs1_final) &gt;= </span><span class="DefaultGroup3">signed</span><span class="DefaultText">(rs2_final) </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  137  </span><span class="DefaultText">                branch_taken &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  138  </span><span class="DefaultText">                int_early_branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;   </span>
<span class="DefaultMargin">  139  </span><span class="DefaultText">                int_RegWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;  </span><span class="DefaultComment">-- Prevent write-back when branching</span>
<span class="DefaultMargin">  140  </span><span class="DefaultText">            </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  141  </span>
<span class="DefaultMargin">  142  </span><span class="DefaultText">        </span><span class="DefaultComment">-- BLTU (110)</span>
<span class="DefaultMargin">  143  </span><span class="DefaultText">        </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;110&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  144  </span><span class="DefaultText">            </span><span class="DefaultGroup1">if</span><span class="DefaultText"> </span><span class="DefaultGroup3">unsigned</span><span class="DefaultText">(rs1_final) &lt; </span><span class="DefaultGroup3">unsigned</span><span class="DefaultText">(rs2_final) </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  145  </span><span class="DefaultText">                branch_taken &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  146  </span><span class="DefaultText">                int_early_branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;  </span>
<span class="DefaultMargin">  147  </span><span class="DefaultText">                int_RegWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;  </span><span class="DefaultComment">-- Prevent write-back when branching</span>
<span class="DefaultMargin">  148  </span><span class="DefaultText">            </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  149  </span>
<span class="DefaultMargin">  150  </span><span class="DefaultText">        </span><span class="DefaultComment">-- BGEU (111)</span>
<span class="DefaultMargin">  151  </span><span class="DefaultText">        </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;111&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  152  </span><span class="DefaultText">            </span><span class="DefaultGroup1">if</span><span class="DefaultText"> </span><span class="DefaultGroup3">unsigned</span><span class="DefaultText">(rs1_final) &gt;= </span><span class="DefaultGroup3">unsigned</span><span class="DefaultText">(rs2_final) </span><span class="DefaultGroup1">then</span>
<span class="DefaultMargin">  153  </span><span class="DefaultText">                branch_taken &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  154  </span><span class="DefaultText">                int_early_branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;   </span>
<span class="DefaultMargin">  155  </span><span class="DefaultText">                int_RegWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;  </span><span class="DefaultComment">-- Prevent write-back when branching</span>
<span class="DefaultMargin">  156  </span><span class="DefaultText">            </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">if</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  157  </span>
<span class="DefaultMargin">  158  </span><span class="DefaultText">        </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  159  </span><span class="DefaultText">            </span><span class="DefaultGroup1">null</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  160  </span><span class="DefaultText">    </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">case</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  161  </span><span class="DefaultText">    </span>
<span class="DefaultMargin">  162  </span><span class="DefaultText">    </span>
<span class="DefaultMargin">  163  </span>
<span class="DefaultMargin">  164  </span><span class="DefaultText">      </span><span class="DefaultComment">-- JAL (Jump and Link)</span>
<span class="DefaultMargin">  165  </span><span class="DefaultText">            </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;1101111&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  166  </span><span class="DefaultText">                int_ALUSrc &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  167  </span><span class="DefaultText">                int_MemtoReg &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  168  </span><span class="DefaultText">                int_RegWrite &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  169  </span><span class="DefaultText">                int_Branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  170  </span><span class="DefaultText">                int_ALUOp &lt;= </span><span class="DefaultStrings">&quot;01&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  171  </span><span class="DefaultText">                int_early_branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;  </span><span class="DefaultComment">-- Always take the jump</span>
<span class="DefaultMargin">  172  </span><span class="DefaultText">                if_flush &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  173  </span><span class="DefaultText">                branch_taken &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  174  </span>
<span class="DefaultMargin">  175  </span><span class="DefaultText">            </span><span class="DefaultComment">-- JALR (Jump and Link Register)</span>
<span class="DefaultMargin">  176  </span><span class="DefaultText">            </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultStrings">&quot;1100111&quot;</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  177  </span><span class="DefaultText">                int_ALUSrc &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  178  </span><span class="DefaultText">                int_MemtoReg &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  179  </span><span class="DefaultText">                int_RegWrite &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  180  </span><span class="DefaultText">                int_Branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  181  </span><span class="DefaultText">                int_ALUOp &lt;= </span><span class="DefaultStrings">&quot;01&quot;</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  182  </span><span class="DefaultText">                int_early_branch &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;  </span><span class="DefaultComment">-- Always take the jump</span>
<span class="DefaultMargin">  183  </span><span class="DefaultText">                if_flush &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  184  </span><span class="DefaultText">                branch_taken &lt;= </span><span class="DefaultStrings">'1'</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  185  </span>
<span class="DefaultMargin">  186  </span>
<span class="DefaultMargin">  187  </span><span class="DefaultText">      </span><span class="DefaultComment">-- Default case</span>
<span class="DefaultMargin">  188  </span><span class="DefaultText">      </span><span class="DefaultGroup1">when</span><span class="DefaultText"> </span><span class="DefaultGroup1">others</span><span class="DefaultText"> =&gt;</span>
<span class="DefaultMargin">  189  </span><span class="DefaultText">        </span><span class="DefaultGroup1">null</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  190  </span><span class="DefaultText">    </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">case</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  191  </span>
<span class="DefaultMargin">  192  </span><span class="DefaultText">    </span><span class="DefaultComment">-- Set if_flush based on branch_taken</span>
<span class="DefaultMargin">  193  </span><span class="DefaultText">    </span><span class="DefaultComment">-- if_flush &lt;= branch_taken;</span>
<span class="DefaultMargin">  194  </span><span class="DefaultText">  </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">process</span><span class="DefaultText">;</span>
<span class="DefaultMargin">  195  </span>
<span class="DefaultMargin">  196  </span><span class="DefaultText"> </span><span class="DefaultComment">-- Output multiplexing based on cntrlsigmux OR ctrl_disable</span>
<span class="DefaultMargin">  197  </span><span class="DefaultText">MemtoReg &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">when</span><span class="DefaultText"> (cntrlsigmux = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">or</span><span class="DefaultText"> ctrl_disable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">else</span><span class="DefaultText"> int_MemtoReg;</span>
<span class="DefaultMargin">  198  </span><span class="DefaultText">RegWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">when</span><span class="DefaultText"> (cntrlsigmux = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">or</span><span class="DefaultText"> ctrl_disable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">else</span><span class="DefaultText"> int_RegWrite;</span>
<span class="DefaultMargin">  199  </span><span class="DefaultText">MemRead &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">when</span><span class="DefaultText"> (cntrlsigmux = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">or</span><span class="DefaultText"> ctrl_disable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">else</span><span class="DefaultText"> int_MemRead;</span>
<span class="DefaultMargin">  200  </span><span class="DefaultText">MemWrite &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">when</span><span class="DefaultText"> (cntrlsigmux = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">or</span><span class="DefaultText"> ctrl_disable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">else</span><span class="DefaultText"> int_MemWrite;</span>
<span class="DefaultMargin">  201  </span><span class="DefaultText">Branch &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">when</span><span class="DefaultText"> (cntrlsigmux = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">or</span><span class="DefaultText"> ctrl_disable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">else</span><span class="DefaultText"> int_Branch;</span>
<span class="DefaultMargin">  202  </span><span class="DefaultText">ALUSrc &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">when</span><span class="DefaultText"> (cntrlsigmux = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">or</span><span class="DefaultText"> ctrl_disable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">else</span><span class="DefaultText"> int_ALUSrc;</span>
<span class="DefaultMargin">  203  </span><span class="DefaultText">ALUOp &lt;= </span><span class="DefaultStrings">&quot;00&quot;</span><span class="DefaultText"> </span><span class="DefaultGroup1">when</span><span class="DefaultText"> (cntrlsigmux = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">or</span><span class="DefaultText"> ctrl_disable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">else</span><span class="DefaultText"> int_ALUOp;</span>
<span class="DefaultMargin">  204  </span><span class="DefaultText">early_branch &lt;= </span><span class="DefaultStrings">'0'</span><span class="DefaultText"> </span><span class="DefaultGroup1">when</span><span class="DefaultText"> (cntrlsigmux = </span><span class="DefaultStrings">'1'</span><span class="DefaultText"> </span><span class="DefaultGroup1">or</span><span class="DefaultText"> ctrl_disable = </span><span class="DefaultStrings">'1'</span><span class="DefaultText">) </span><span class="DefaultGroup1">else</span><span class="DefaultText"> int_early_branch;</span>
<span class="DefaultMargin">  205  </span><span class="DefaultText">  </span>
<span class="DefaultMargin">  206  </span><span class="DefaultGroup1">end</span><span class="DefaultText"> </span><span class="DefaultGroup1">architecture</span><span class="DefaultText"> Behavioral ; </span><span class="DefaultComment">-- of ControlUnit</span>
<span class="DefaultMargin">  207  </span>
</pre>
</body>
</html>
